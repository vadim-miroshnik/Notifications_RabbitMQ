version: '3'
services:
  admin:
    env_file:
      - .env
    expose:
      - "8000"
    container_name: django
    environment:
      POSTGRES__USER: ${POSTGRES__USER}
      POSTGRES__PASSWORD: ${POSTGRES__PASSWORD}
      POSTGRES__DB: ${POSTGRES__DB}
      POSTGRES__HOST: "postgres_container"
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: False
    networks:
      - movies
    depends_on:
      - postgres
    volumes:
      - ./admin_panel/static/:/var/www/static:ro
    build: ./admin_panel/


  notification:
    container_name: notification
    image: notification
    networks:
      - movies
    environment:
      APP__JWT_SECRET_KEY: $APP__JWT_SECRET_KEY
      APP__ALGORITHM: HS256
      MONGO__HOST: mongos1
      MONGO__PORT: 27017
      POSTGRES__HOST: postgres
      RABBITMQ__SERVER: rabbitmq
      RABBITMQ__USER: ${RABBITMQ__USER}
      RABBITMQ__PASSWORD: ${RABBITMQ__PASSWORD}
    env_file:
      - .env
    build: ./notification_api/

  worker:
    container_name: worker
    image: worker
    networks:
      - movies
    env_file:
      - .env
    environment:
      RABBITMQ__SERVER: rabbitmq
      RABBITMQ__USER: ${RABBITMQ__USER}
      RABBITMQ__PASSWORD: ${RABBITMQ__PASSWORD}
    build: ./worker/
    depends_on:
      - rabbitmq

  scheduler:
    container_name: scheduler
    image: scheduler
    networks:
      - movies
    environment:
      NOTIFICATION_API: notification
      NOTIFICATION_PORT: 8000
    build: ./scheduler/

  postgres:
    container_name: postgres_container
    env_file:
      - .env
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${POSTGRES__PASSWORD}
      POSTGRES_DB: ${POSTGRES__DB}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - movies
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.8-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ__USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ__PASSWORD}
    networks:
      - movies

volumes:
    postgres:
      name: admin_panel_postgres
    pgadmin: