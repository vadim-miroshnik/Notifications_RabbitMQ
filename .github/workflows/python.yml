name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  quality_code:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wemake-python-styleguide flake8-html mypy lxml

      - name: Create reports folders
        run: |
          mkdir -p reports/wemake/
          mkdir -p reports/mypy-admin_panel/
          mkdir -p reports/mypy-notification_api/

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics 
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exit-zero --max-complexity=10 --max-line-length=127 --format=html --htmldir=reports/wemake/

      - name: Lint with mypy admin_panel
        run: |
          mypy ./admin_panel --html-report reports/mypy-admin_panel --ignore-missing-imports \
            --exclude '(migrations*)/$'

      - name: Lint with mypy notification_api
        run: |
          mypy ./notification_api --html-report reports/mypy-notification_api/ --ignore-missing-imports >> /dev/null

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports/

  unit_tests:

    needs: ["quality_code"]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python_version: [ "3.9", "3.10" ]
        application: ["admin_panel", "notification_api"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install dependencies for ${{ matrix.application }}
      run: |
        python -m pip install --upgrade pip
        pip install -r "${{ matrix.application }}/tests/requirements.txt"
        if [ -f "${{ matrix.application }}/requirements.txt" ]; then pip install -r "${{ matrix.application }}/requirements.txt"; fi

    - name: Test with pytest ${{ matrix.application }}
      run: |
        pytest "${{ matrix.application }}/tests/unit"
